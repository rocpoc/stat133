i = i + 1
}
data.frame(lower, upper, dig, punc, spc)
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
df = data.frame(ncol = 5, nrow = 13)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
print(i)
i = i + 1
}
data.frame(lower, upper, dig, punc, spc, row.names = levels(dat$sentiment))
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
df = data.frame(ncol = 5, nrow = 13)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in  levels(dat$sentiment)) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
print(i)
i = i + 1
}
data.frame(lower, upper, dig, punc, spc, row.names = levels(dat$sentiment))
levels(sentis)
names(sentiss)
names(sentis)
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
df = data.frame(ncol = 5, nrow = 13)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
print(i)
i = i + 1
}
data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
print(i)
i = i + 1
}
data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"), col.names = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces"))
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"), col.names = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces")
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"), col.names = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces"))
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
df = data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
colnames(df) = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces")
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
df = data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
colnames(df) = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces")
df
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
df = data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
colnames(df) = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces")
table(df)
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
df = data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
colnames(df) = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces")
df
length(dat$content[str_detect(dat$content, "[\\^]+") == TRUE]) # how many tweets contain at least one caret symbol
length(dat$content[str_detect(dat$content, "[$][$][$]+") == TRUE]) #how many tweets contain three or more consecutive dollar symbols
length(dat$content[str_detect(dat$content, "[Aa]") == FALSE]) #How many tweets do NOT contain the characters
head(dat$content[str_detect(dat$content, "[Aa]") == FALSE], 10) #first 10 elements of the tweets that do NOT contain the characters
exclaim = str_count(dat$content, "[!]") #Number of exclamation symbols
summary(exclaim) #summary of exclaim
dat$content[exclaim == 76] #the largest number of exclamation symbols
length(dat$content[str_detect(dat$content, "[Oo][Mm][Gg]") == TRUE]) #strings with 'omg'
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
df = data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
colnames(df) = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces")
df
length(fun_index)
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[:lower:]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
df = data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
colnames(df) = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces")
df
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
df = data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
colnames(df) = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces")
df
sentis = list(worry_index, surprise_index, sadness_index, relief_index, neutral_index, love_index, hate_index, happiness_index, fun_index, enthusiasm_index, empty_index, boredom_index, anger_index)
lower = rep(0, 13)
upper = rep(0, 13)
dig = rep(0, 13)
punc = rep(0, 13)
spc = rep(0, 13)
i = 1
for(sentiment in sentis) {
lowercase = str_count(as.character(dat$content[sentiment]), pattern = "[a-z]")
uppercase = str_count(as.character(dat$content[sentiment]), pattern = "[A-Z]")
digits = str_count(as.character(dat$content[sentiment]), pattern = "[:digit:]")
punct = str_count(as.character(dat$content[sentiment]), pattern = "[:punct:]")
space = str_count(as.character(dat$content[sentiment]), pattern = "[:space:]")
avg_lower = sum(lowercase) / length(lowercase)
avg_upper = sum(uppercase) / length(uppercase)
avg_dig = sum(digits) / length(digits)
avg_punct = sum(punct) / length(punct)
avg_space = sum(space) / length(space)
lower[i] = avg_lower
upper[i] = avg_upper
dig[i] = avg_dig
punc[i] = avg_punct
spc[i] = avg_space
i = i + 1
}
df = data.frame(lower, upper, dig, punc, spc, row.names = c("worry", "surprise", "sadness", "relief", "neutral", "love", "hate", "happiness", "fun", "enthusiasm", "empty", "boredom", "anger"))
colnames(df) = c("avg # lowercase letters", "avg # of uppercase letters", "avg # of digits", "avg # of punctuations", "avg # of spaces")
df
levels(dat$sentiment) #different types of sentiment
table(factor(dat$sentiment)) #table of frequencies of sentiment values
relative = prop.table(table(dat$sentiment))
relative
barplot(sort(relative, increasing = TRUE), names.arg = names(sort(relative, increasing = TRUE)), horiz = TRUE,  las=1)
worry_index = which((dat$sentiment == 'worry') == TRUE)
worry_counts = sum(nchar(as.character(dat$content[worry_index]))) / length(worry_index)
surprise_index = which((dat$sentiment == 'surprise') == TRUE)
surprise_counts = sum(nchar(as.character(dat$content[surprise_index]))) / length(surprise_index)
sadness_index = which((dat$sentiment == 'sadness') == TRUE)
sadness_counts = sum(nchar(as.character(dat$content[sadness_index]))) / length(sadness_index)
relief_index = which((dat$sentiment == 'relief') == TRUE)
relief_counts = sum(nchar(as.character(dat$content[relief_index]))) / length(relief_index)
neutral_index = which((dat$sentiment == 'neutral') == TRUE)
neutral_counts = sum(nchar(as.character(dat$content[neutral_index]))) / length(neutral_index)
love_index = which((dat$sentiment == 'love') == TRUE)
love_counts = sum(nchar(as.character(dat$content[love_index]))) / length(love_index)
hate_index = which((dat$sentiment == 'hate') == TRUE)
hate_counts = sum(nchar(as.character(dat$content[hate_index]))) / length(hate_index)
happiness_index = which((dat$sentiment == 'happiness') == TRUE)
happiness_counts = sum(nchar(as.character(dat$content[happiness_index]))) / length(happiness_index)
fun_index = which((dat$sentiment == 'fun') == TRUE)
fun_counts = sum(nchar(as.character(dat$content[fun_index]))) / length(fun_index)
enthusiasm_index = which((dat$sentiment == 'enthusiasm') == TRUE)
enthusiasm_counts = sum(nchar(as.character(dat$content[enthusiasm_index]))) /length(enthusiasm_index)
empty_index = which((dat$sentiment == 'empty') == TRUE)
empty_counts = sum(nchar(as.character(dat$content[empty_index]))) / length(empty_index)
boredom_index = which((dat$sentiment == 'boredom') == TRUE)
boredom_counts = sum(nchar(as.character(dat$content[boredom_index])))/length(boredom_index)
anger_index = which((dat$sentiment == 'anger') == TRUE)
anger_counts = sum(nchar(as.character(dat$content[anger_index])))/length(anger_index)
avg_counts = c("worry avg"= worry_counts, "surprise avg"=surprise_counts, "sadness avg"=sadness_counts, "relief avg"=relief_counts, "neutral avg"=neutral_counts, "love avg"=love_counts, "hate avg"=hate_counts, "happiness avg"=happiness_counts,"fun avg"=fun_counts, "enthusiasm avg"=enthusiasm_counts, "empty avg"=empty_counts, "boredom avg"=boredom_counts, "anger avg"=anger_counts)
as.table(avg_counts)
